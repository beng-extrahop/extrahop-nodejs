{"version":3,"sources":["../../src/controllers/Dashboard.controller.js"],"names":["BaseCtrl","require","Dashboard","DashboardSet","DashboardSharing","ReportSet","module","exports","dashboard","id","getDashboard","getDashboards","printError","getDashboardSharing","getDashboardReports","data","postDashboard","patchDashboard","sharing","patchDashboardSharing","deleteDashboard","username","update","owner","addAnyoneView","removeAnyone","permission","updateSharing","anyone","updateAnyoneSharing","users","updateUserSharing","group","groups","updateGroupSharing","process","appliance","map","x","putDashboardSharing"],"mappings":"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","file":"Dashboard.controller.js","sourcesContent":["// Dashboard.controller.js\n\nconst BaseCtrl = require('../controllers/_base/BaseCtrl.controller');\nconst Dashboard = require('../models/dashboard/Dashboard.model');\nconst DashboardSet = require('../models/dashboard/DashboardSet.model');\nconst DashboardSharing = require('../models/dashboard/DashboardSharing.model');\nconst ReportSet = require('../models/report/ReportSet.model');\n\nmodule.exports = class DashboardCtrl extends BaseCtrl {\n\n  // -------------------------------------\n  // Defaults\n  // -------------------------------------\n\n  get(dashboard = {}) {\n    return dashboard.id ? new Dashboard(this.getDashboard(dashboard)) : new DashboardSet(...this.getDashboards());\n  }\n\n  getSharing(dashboard = {}) {\n    if ( !dashboard.id ) {\n      return this.printError('GET', 'dashboard sharing', 'Function parameter { \"id\": dashboardId } is required');\n    }\n\n    return new DashboardSharing(this.getDashboardSharing(dashboard));\n  }\n\n  getReports(dashboard) {\n    if ( !dashboard.id ) {\n      return this.printError('GET', 'dashboard reports', 'Function parameter { \"id\": dashboardId } is required');\n    }\n\n    return new ReportSet(...this.getDashboardReports(dashboard));\n  }\n\n  create(data) {\n    if ( !data ) {\n      return this.printError('POST', 'dashboards', 'Function parameter { Dashboard } is required');\n    }\n\n    return this.postDashboard(new Dashboard(data));\n  }\n\n  update(dashboard, data) {\n    if ( !dashboard.id ) {\n      return this.printError('PATCH', 'dashboards', 'Function parameter { \"id\": dashboardId } is required');\n    }\n\n    return this.patchDashboard(dashboard, data);\n  }\n\n  updateSharing(dashboard, sharing) {\n    if ( !dashboard.id ) {\n      return this.printError('PATCH', 'dashboard sharing', 'Function parameter { \"id\": dashboardId } is required');\n    }\n\n    return this.patchDashboardSharing(dashboard, sharing);\n  }\n\n  delete(dashboard) {\n    if ( !dashboard.id ) {\n      return this.printError('DELETE', 'dashboards', 'Function parameter { \"id\": dashboardId } is required');\n    }\n\n    return this.deleteDashboard(dashboard);\n  }\n\n  // -------------------------------------\n  // Modify Dashboards\n  // -------------------------------------\n\n  transferOwnership(dashboard, username) {\n    return this.update(dashboard, { owner: username });\n  }\n\n  makePublic(dashboard) {\n    return this.addAnyoneView(dashboard);\n  }\n\n  makePrivate(dashboard) {\n    return this.removeAnyone(dashboard);\n  }\n\n  // -------------------------------------\n  // Anyone Sharing\n  // -------------------------------------\n\n  updateAnyoneSharing(dashboard, permission) {\n    return this.updateSharing(dashboard, { anyone: permission });\n  }\n\n  addAnyoneView(dashboard) {\n    return this.updateAnyoneSharing(dashboard, 'viewer');\n  }\n\n  addAnyoneEdit(dashboard) {\n    return this.updateAnyoneSharing(dashboard, 'editor');\n  }\n\n  removeAnyone(dashboard) {\n    return this.updateAnyoneSharing(dashboard, null);\n  }\n\n  // -------------------------------------\n  // User Sharing\n  // -------------------------------------\n\n  updateUserSharing(dashboard, username, permission) {\n    return this.updateSharing(dashboard, { users: { [username]: permission } });\n  }\n\n  addUserView(dashboard, username) {\n    return this.updateUserSharing(dashboard, username, 'viewer');\n  }\n\n  addUserEdit(dashboard, username) {\n    return this.updateUserSharing(dashboard, username, 'editor');\n  }\n\n  removeUser(dashboard, username) {\n    return this.updateUserSharing(dashboard, username, null);\n  }\n\n  // -------------------------------------\n  // Group Sharing\n  // -------------------------------------\n\n  updateGroupSharing(dashboard, group, permission) {\n    return this.updateSharing(dashboard, { groups: { [group.id]: permission } });\n  }\n\n  addGroupView(dashboard, group) {\n    return this.updateGroupSharing(dashboard, group, 'viewer');\n  }\n\n  addGroupEdit(dashboard, group) {\n    return this.updateGroupSharing(dashboard, group, 'editor');\n  }\n\n  removeGroup(dashboard, group) {\n    return this.updateGroupSharing(dashboard, group, null);\n  }\n\n  // -------------------------------------\n  // Base Functions\n  // -------------------------------------\n\n  getDashboards() {\n    return this.process(this.appliance.getDashboards(), 'dashboards').map(x => new Dashboard(x));\n  }\n\n  getDashboard(dashboard) {\n    return this.process(this.appliance.getDashboard(dashboard.id), 'dashboard');\n  }\n\n  deleteDashboard(dashboard) {\n    return this.process(this.appliance.deleteDashboard(dashboard.id), 'dashboard');\n  }\n\n  patchDashboard(dashboard, data) {\n    return this.process(this.appliance.patchDashboard(dashboard.id, data), 'dashboard');\n  }\n\n  // -------------------------------------\n  // Report Functions\n  // -------------------------------------\n\n  getDashboardReports(dashboard) {\n    return this.process(this.appliance.getDashboardReports(dashboard.id), 'dashboard reports');\n  }\n\n  // -------------------------------------\n  // Sharing Functions\n  // -------------------------------------\n\n  getDashboardSharing(dashboard) {\n    return this.process(this.appliance.getDashboardSharing(dashboard.id), 'dashboard sharing');\n  }\n\n  patchDashboardSharing(dashboard, sharing) {\n    return this.process(this.appliance.patchDashboardSharing(dashboard.id, sharing), 'dashboard sharing');\n  }\n\n  putDashboardSharing(dashboard, sharing) {\n    return this.process(this.appliance.putDashboardSharing(dashboard.id, sharing), 'dashboard sharing');\n  }\n};\n"]}