{"version":3,"sources":["../../../src/controllers/_app/Appliance.controller.js"],"names":["BaseCtrl","require","ApplianceSet","Config","Icons","Strings","module","exports","appliances","hosts","filter","host","enabled","appliance","active","length","Error","error","console","info","id","get","hostname","platform","Platforms","Command","Discover","Explore","Trace"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAMA,WAAWC,QAAQ,6CAAR,CAAjB;AACA,IAAMC,eAAeD,QAAQ,2CAAR,CAArB;;eACmCA,QAAQ,kCAAR,C;IAA3BE,M,YAAAA,M;IAAQC,K,YAAAA,K;IAAOC,O,YAAAA,O;;AAEvBC,OAAOC,OAAP;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2BACS;AACL,UAAI;AACF,aAAKC,UAAL,GAAkB,IAAIN,YAAJ,CAChBC,OAAOM,KAAP,CAAaC,MAAb,CAAoB;AAAA,iBAAQC,KAAKC,OAAb;AAAA,SAApB,CADgB,EAEhBF,MAFgB,CAET;AAAA,iBAAaG,UAAUC,MAAvB;AAAA,SAFS,CAAlB;;AAIA,YAAI,CAAC,KAAKN,UAAN,IAAoB,KAAKA,UAAL,CAAgBO,MAAhB,KAA2B,CAAnD,EAAsD;AACpD,gBAAM,IAAIC,KAAJ,EAAN;AACD;AACF,OARD,CASA,OAAOC,KAAP,EAAc;AACZC,gBAAQC,IAAR,CAAgBf,MAAMY,KAAtB;AACD;AACF;AAdH;AAAA;AAAA,kCAgBgB;AACZ,aAAO,KAAKR,UAAZ;AACD;AAlBH;AAAA;AAAA,gCAoBcY,EApBd,EAoBkB;AACd,aAAO,KAAKC,GAAL,CAAS,EAAED,MAAF,EAAT,EAAiB,CAAjB,CAAP;AACD;AAtBH;AAAA;AAAA,sCAwBoBE,QAxBpB,EAwB8B;AAC1B,aAAO,KAAKD,GAAL,CAAS,EAAEC,kBAAF,EAAT,EAAuB,CAAvB,CAAP;AACD;AA1BH;AAAA;AAAA,6BA4BW;AACP,aAAO,KAAKD,GAAL,CAAS,EAAEE,UAAUlB,QAAQmB,SAAR,CAAkBC,OAA9B,EAAT,EAAkD,CAAlD,CAAP;AACD;AA9BH;AAAA;AAAA,8BAgCY;AACR,aAAO,KAAKJ,GAAL,CAAS,EAAEE,UAAUlB,QAAQmB,SAAR,CAAkBE,QAA9B,EAAT,CAAP;AACD;AAlCH;AAAA;AAAA,8BAoCY;AACR,aAAO,KAAKL,GAAL,CAAS,EAAEE,UAAUlB,QAAQmB,SAAR,CAAkBG,OAA9B,EAAT,CAAP;AACD;AAtCH;AAAA;AAAA,8BAwCY;AACR,aAAO,KAAKN,GAAL,CAAS,EAAEE,UAAUlB,QAAQmB,SAAR,CAAkBI,KAA9B,EAAT,CAAP;AACD;AA1CH;;AAAA;AAAA,EAA6C5B,QAA7C","file":"Appliance.controller.js","sourcesContent":["// Appliance.controller.js\n\nconst BaseCtrl = require('../../controllers/_base/BaseCtrl.controller');\nconst ApplianceSet = require('../../models/appliance/ApplianceSet.model');\nconst { Config, Icons, Strings } = require('../../constants/Global.constants');\n\nmodule.exports = class ApplianceCtrl extends BaseCtrl {\n  init() {\n    try {\n      this.appliances = new ApplianceSet(\n        Config.hosts.filter(host => host.enabled)\n      ).filter(appliance => appliance.active);\n\n      if (!this.appliances || this.appliances.length === 0) {\n        throw new Error();\n      }\n    }\n    catch (error) {\n      console.info(`${Icons.Error} No active hosts available. Exiting.\\n`);\n    }\n  }\n\n  getAllHosts() {\n    return this.appliances;\n  }\n\n  getHostByID(id) {\n    return this.get({ id })[0];\n  }\n\n  getHostByHostname(hostname) {\n    return this.get({ hostname })[0];\n  }\n\n  getECA() {\n    return this.get({ platform: Strings.Platforms.Command })[0];\n  }\n\n  getEDAs() {\n    return this.get({ platform: Strings.Platforms.Discover });\n  }\n\n  getEXAs() {\n    return this.get({ platform: Strings.Platforms.Explore });\n  }\n\n  getETAs() {\n    return this.get({ platform: Strings.Platforms.Trace });\n  }\n};\n"]}