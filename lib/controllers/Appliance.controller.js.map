{"version":3,"sources":["../../src/controllers/Appliance.controller.js"],"names":["BaseCtrl","require","Appliance","ApplianceSet","ApplianceConnection","ApplianceCloudServices","ApplianceProductKey","module","exports","appliance","getAppliance","getAppliances","getApplianceCloudServices","getProductKey","data","postAppliance","build","process","id","connection","getApplianceProductKey"],"mappings":";;;;;;;;;;;;AAAA;;AAEA,IAAMA,WAAWC,QAAQ,0CAAR,CAAjB;AACA,IAAMC,YAAYD,QAAQ,qCAAR,CAAlB;AACA,IAAME,eAAeF,QAAQ,wCAAR,CAArB;AACA,IAAMG,sBAAsBH,QAAQ,+CAAR,CAA5B;AACA,IAAMI,yBAAyBJ,QAAQ,kDAAR,CAA/B;AACA,IAAMK,sBAAsBL,QAAQ,+CAAR,CAA5B;;AAEAM,OAAOC,OAAP;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAEE;AACA;AACA;;AAJF,wBAMMC,SANN,EAMiB;AACb,aAAOA,YAAY,IAAIP,SAAJ,CAAc,KAAKQ,YAAL,CAAkBD,SAAlB,CAAd,CAAZ,sCAA8DN,YAA9D,mCAA8E,KAAKQ,aAAL,EAA9E,MAAP;AACD;AARH;AAAA;AAAA,qCAUmBF,SAVnB,EAU8B;AAC1B,aAAO,IAAIJ,sBAAJ,CAA2B,KAAKO,yBAAL,CAA+BH,SAA/B,CAA3B,CAAP;AACD;AAZH;AAAA;AAAA,kCAcgBA,SAdhB,EAc2B;AACvB,aAAO,IAAIH,mBAAJ,CAAwB,KAAKO,aAAL,CAAmBJ,SAAnB,CAAxB,CAAP;AACD;AAhBH;AAAA;AAAA,4BAkBUK,IAlBV,EAkBgB;AACZ,aAAO,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWF,IAAX,CAAnB,CAAP;AACD;AApBH;AAAA;AAAA,0BAsBQA,IAtBR,EAsBc;AACV,aAAO,IAAIV,mBAAJ,CAAwBU,IAAxB,CAAP;AACD;;AAED;AACA;AACA;;AA5BF;AAAA;AAAA,oCA8BkB;AACd,aAAO,KAAKG,OAAL,CAAa,KAAKR,SAAL,CAAeE,aAAf,EAAb,EAA6C,YAA7C,CAAP;AACD;AAhCH;AAAA;AAAA,iCAkCeF,SAlCf,EAkC0B;AACtB,aAAO,KAAKQ,OAAL,CAAa,KAAKR,SAAL,CAAeC,YAAf,CAA4BD,UAAUS,EAAtC,CAAb,EAAwD,WAAxD,CAAP;AACD;AApCH;AAAA;AAAA,kCAsCgBC,UAtChB,EAsC4B;AACxB,aAAO,KAAKF,OAAL,CAAa,KAAKR,SAAL,CAAeM,aAAf,CAA6BI,UAA7B,CAAb,EAAuD,sBAAvD,CAAP;AACD;AAxCH;AAAA;AAAA,8CA0C4BV,SA1C5B,EA0CuC;AACnC,aAAO,KAAKQ,OAAL,CAAa,KAAKR,SAAL,CAAeG,yBAAf,CAAyCH,UAAUS,EAAnD,CAAb,EAAqE,0BAArE,CAAP;AACD;AA5CH;AAAA;AAAA,2CA8CyBT,SA9CzB,EA8CoC;AAChC,aAAO,KAAKQ,OAAL,CAAa,KAAKR,SAAL,CAAeW,sBAAf,CAAsCX,UAAUS,EAAhD,CAAb,EAAkE,uBAAlE,CAAP;AACD;AAhDH;;AAAA;AAAA,EAA6ClB,QAA7C","file":"Appliance.controller.js","sourcesContent":["// Appliance.controller.js\n\nconst BaseCtrl = require('../controllers/_base/BaseCtrl.controller');\nconst Appliance = require('../models/appliance/Appliance.model');\nconst ApplianceSet = require('../models/appliance/ApplianceSet.model');\nconst ApplianceConnection = require('../models/appliance/ApplianceConnection.model');\nconst ApplianceCloudServices = require('../models/appliance/ApplianceCloudServices.model');\nconst ApplianceProductKey = require('../models/appliance/ApplianceProductKey.model');\n\nmodule.exports = class ApplianceCtrl extends BaseCtrl {\n\n  // -------------------------------------\n  // Defaults\n  // -------------------------------------\n\n  get(appliance) {\n    return appliance ? new Appliance(this.getAppliance(appliance)) : new ApplianceSet(...this.getAppliances());\n  }\n\n  getCloudServices(appliance) {\n    return new ApplianceCloudServices(this.getApplianceCloudServices(appliance));\n  }\n\n  getProductKey(appliance) {\n    return new ApplianceProductKey(this.getProductKey(appliance));\n  }\n\n  connect(data) {\n    return this.postAppliance(this.build(data));\n  }\n\n  build(data) {\n    return new ApplianceConnection(data);\n  }\n\n  // -------------------------------------\n  // Base Functions\n  // -------------------------------------\n\n  getAppliances() {\n    return this.process(this.appliance.getAppliances(), 'appliances');\n  }\n\n  getAppliance(appliance) {\n    return this.process(this.appliance.getAppliance(appliance.id), 'appliance');\n  }\n\n  postAppliance(connection) {\n    return this.process(this.appliance.postAppliance(connection), 'appliance connection');\n  }\n\n  getApplianceCloudServices(appliance) {\n    return this.process(this.appliance.getApplianceCloudServices(appliance.id), 'appliance cloud services');\n  }\n\n  getApplianceProductKey(appliance) {\n    return this.process(this.appliance.getApplianceProductKey(appliance.id), 'appliance product key');\n  }\n};\n"]}