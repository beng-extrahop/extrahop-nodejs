{"version":3,"sources":["../../../src/models/_base/BaseObject.model.js"],"names":["require","Config","parse","fastCSV","fs","module","exports","format","JSON","stringify","console","info","toString","header","subkey","data","fields","Object","keys","options","toCSV","filename","stream","createWriteStream","CSV_DIR","encoding","writeToStream","headers","on","error","err"],"mappings":";;;;;;AAAA;;eAEmBA,QAAQ,kCAAR,C;IAAXC,M,YAAAA,M;;gBAEUD,QAAQ,UAAR,C;IAAVE,K,aAAAA,K;;AACR,IAAMC,UAAUH,QAAQ,UAAR,CAAhB;AACA,IAAMI,KAAKJ,QAAQ,IAAR,CAAX;;AAEAK,OAAOC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACmC;AAAA,qFAAJ,EAAI;AAAA,6BAAtBC,MAAsB;AAAA,UAAtBA,MAAsB,+BAAb,IAAa;;AAC/B,aAAOC,KAAKC,SAAL,CAAe,IAAf,EAAqB,IAArB,EAA2BF,SAAS,CAAT,GAAa,IAAxC,CAAP;AACD;AAHH;AAAA;AAAA,4BAKU;AACNG,cAAQC,IAAR,CAAa,KAAKC,QAAL,EAAb;AACD;AAPH;AAAA;AAAA,4BASwC;AAAA,sFAAJ,EAAI;AAAA,+BAA9BC,MAA8B;AAAA,UAA9BA,MAA8B,gCAArB,IAAqB;AAAA,UAAfC,MAAe,SAAfA,MAAe;;AACpC,UAAMC,OAAOD,SAAS,KAAKA,MAAL,CAAT,GAAwB,IAArC;AACA,UAAME,SAASC,OAAOC,IAAP,CAAYH,IAAZ,CAAf;;AAEA,aAAOb,MAAMa,IAAN,EAAY,EAAEF,cAAF,EAAUG,cAAV,EAAZ,CAAP;AACD;AAdH;AAAA;AAAA,+BAgByB;AAAA,UAAdG,OAAc,uEAAJ,EAAI;;AACrBT,cAAQC,IAAR,CAAa,KAAKS,KAAL,CAAWD,OAAX,CAAb;AACD;AAlBH;AAAA;AAAA,sCAoBmC;AAAA,UAApBE,QAAoB,SAApBA,QAAoB;AAAA,UAAVP,MAAU,SAAVA,MAAU;;AAC/B,UAAMQ,SAASlB,GAAGmB,iBAAH,CAAwBtB,OAAOuB,OAA/B,SAA0CH,QAA1C,EAAsD,EAAEI,UAAU,MAAZ,EAAtD,CAAf;AACA,UAAMV,OAAOD,SAAS,KAAKA,MAAL,CAAT,GAAwB,IAArC;;AAEAX,cAAQuB,aAAR,CAAsBJ,MAAtB,EAA8BP,IAA9B,EAAoC,EAAEY,SAAS,IAAX,EAApC,EAAuDC,EAAvD,CAA0D,OAA1D,EAAmE;AAAA,eAAOlB,QAAQmB,KAAR,CAAcC,GAAd,CAAP;AAAA,OAAnE;;AAEA;AACD;AA3BH;;AAAA;AAAA","file":"BaseObject.model.js","sourcesContent":["// BaseObject.model.js\n\nconst { Config } = require('../../constants/Global.constants');\n\nconst { parse } = require('json2csv');\nconst fastCSV = require('fast-csv');\nconst fs = require('fs');\n\nmodule.exports = class BaseObject {\n  toString({ format = true } = {}) {\n    return JSON.stringify(this, null, format ? 2 : null);\n  }\n\n  print() {\n    console.info(this.toString());\n  }\n\n  toCSV({ header = true, subkey } = {}) {\n    const data = subkey ? this[subkey] : this;\n    const fields = Object.keys(data);\n\n    return parse(data, { header, fields });\n  }\n\n  printCSV(options = {}) {\n    console.info(this.toCSV(options));\n  }\n\n  writeToCSV({ filename, subkey }) {\n    const stream = fs.createWriteStream(`${Config.CSV_DIR}/${filename}`, { encoding: 'utf8' });\n    const data = subkey ? this[subkey] : this;\n\n    fastCSV.writeToStream(stream, data, { headers: true }).on('error', err => console.error(err));\n\n    // fastCSV.write([this[subkey] || this], { headers }).pipe(fs.createWriteStream(filename));\n  }\n};\n"]}