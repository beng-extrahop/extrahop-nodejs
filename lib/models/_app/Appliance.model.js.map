{"version":3,"sources":["../../../src/models/_app/Appliance.model.js"],"names":["BaseObject","require","Request","Icons","ActivityGroupCtrl","ActivityMapCtrl","AlertCtrl","AnalysisPriorityCtrl","ApikeyCtrl","ApplianceCtrl","ApplicationCtrl","AuditLogCtrl","BundleCtrl","CustomizationCtrl","CustomDeviceCtrl","DashboardCtrl","DeviceCtrl","DeviceGroupCtrl","LicenseCtrl","MetricCtrl","RecordCtrl","SoftwareCtrl","TriggerCtrl","module","exports","appliance","host","hostname","apikey","type","request","getExtrahop","success","active","console","warn","Warn","info","Info","Object","keys","data","forEach","key","name","display_host","getAppliance","getAppliances","find","x","get","activityGroupId","payload","post","activityMapId","delete","patch","put","alertId","applicationId","deviceGroupId","deviceId","emailGroupId","exclusionIntervalId","networkId","applianceId","keyId","active_from","active_until","limit","offset","searchType","value","flexGridId","geomapId","pageId","bundleId","params","customDeviceId","criteria","include_criteria","criteriaId","customizationId","dashboardId","search_type","direct_assignments_only","tagId","triggerId","since","all","processId","postMetrics","xid","getMetricsNext","networkLocalityId","nodeId","packetCaptureId","contextTtl","cursor","postRecordsSearch","reportId","section","softwareId","sslDecryptKeyId","protocolId","queueId","encodeURIComponent","filename","user","userGroupId","vlanId"],"mappings":"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","file":"Appliance.model.js","sourcesContent":["// Appliance.model.js\n\nconst BaseObject = require('../../models/_base/BaseObject.model');\nconst Request = require('../../models/_http/Request.model');\nconst { Icons } = require('../../constants/Global.constants');\n\nconst ActivityGroupCtrl = require('../../controllers/ActivityGroup.controller');\nconst ActivityMapCtrl = require('../../controllers/ActivityMap.controller');\nconst AlertCtrl = require('../../controllers/Alert.controller');\nconst AnalysisPriorityCtrl = require('../../controllers/AnalysisPriority.controller');\nconst ApikeyCtrl = require('../../controllers/Apikey.controller');\nconst ApplianceCtrl = require('../../controllers/Appliance.controller');\nconst ApplicationCtrl = require('../../controllers/Application.controller');\nconst AuditLogCtrl = require('../../controllers/AuditLog.controller');\nconst BundleCtrl = require('../../controllers/Bundle.controller');\nconst CustomizationCtrl = require('../../controllers/Customization.controller');\nconst CustomDeviceCtrl = require('../../controllers/CustomDevice.controller');\nconst DashboardCtrl = require('../../controllers/Dashboard.controller');\nconst DeviceCtrl = require('../../controllers/Device.controller');\nconst DeviceGroupCtrl = require('../../controllers/DeviceGroup.controller');\nconst LicenseCtrl = require('../../controllers/License.controller');\nconst MetricCtrl = require('../../controllers/Metric.controller');\nconst RecordCtrl = require('../../controllers/Record.controller');\nconst SoftwareCtrl = require('../../controllers/Software.controller');\nconst TriggerCtrl = require('../../controllers/Trigger.controller');\n\nmodule.exports = class Appliance extends BaseObject {\n\n  constructor(appliance = {}) {\n    super();\n    this.host = appliance.host || appliance.hostname;\n    this.hostname = this.host;\n    this.apikey = appliance.apikey;\n    this.type = appliance.type;\n\n    this.request = new Request(this.hostname, this.apikey);\n\n    const getExtrahop = this.getExtrahop();\n\n    if (!getExtrahop.success) {\n      this.active = false;\n      return console.warn(`${Icons.Warn} Connection to ${this.hostname} failed`);\n    }\n\n    console.info(`${Icons.Info} Connected to ${this.hostname}`);\n\n    Object.keys(getExtrahop.data).forEach(key => {\n      this[key] = getExtrahop.data[key];\n    });\n\n    this.name = this.display_host;\n\n    const getAppliance = (this.getAppliances().data || []).find(x => x.hostname === this.hostname);\n\n    if (getAppliance == null) {\n      return console.warn(`${Icons.Warn} Error populating appliance data from ${this.hostname}`);\n    }\n\n    Object.keys(getAppliance).forEach(key => {\n      this[key] = getAppliance[key];\n    });\n\n    if (this.host !== this.hostname) {\n      console.warn(`${Icons.Warn} Hostname mismatch. Configured: ${this.host}, Retrieved: ${this.hostname}`);\n    }\n  }\n  // -------------------------------------\n  // Controllers\n  // -------------------------------------\n\n  activityGroups() {\n    return new ActivityGroupCtrl(this);\n  }\n  activityMaps() {\n    return new ActivityMapCtrl(this);\n  }\n  alerts() {\n    return new AlertCtrl(this);\n  }\n  analysisPriority() {\n    return new AnalysisPriorityCtrl(this);\n  }\n  apikeys() {\n    return new ApikeyCtrl(this);\n  }\n  appliances() {\n    return new ApplianceCtrl(this);\n  }\n  applications() {\n    return new ApplicationCtrl(this);\n  }\n  auditLog() {\n    return new AuditLogCtrl(this);\n  }\n  bundles() {\n    return new BundleCtrl(this);\n  }\n  customizations() {\n    return new CustomizationCtrl(this);\n  }\n  customDevices() {\n    return new CustomDeviceCtrl(this);\n  }\n  dashboards() {\n    return new DashboardCtrl(this);\n  }\n  devices() {\n    return new DeviceCtrl(this);\n  }\n  deviceGroups() {\n    return new DeviceGroupCtrl(this);\n  }\n  license() {\n    return new LicenseCtrl(this);\n  }\n  metrics() {\n    return new MetricCtrl(this);\n  }\n  records() {\n    return new RecordCtrl(this);\n  }\n  software() {\n    return new SoftwareCtrl(this);\n  }\n  triggers() {\n    return new TriggerCtrl(this);\n  }\n\n\n  // -------------------------------------\n  // API: Activity Groups\n  // -------------------------------------\n\n  getActivityGroups() {\n    return this.request.get('/activitygroups');\n  }\n\n  getActivityGroupDashboards(activityGroupId) {\n    return this.request.get(`/activitygroups/${activityGroupId}/dashboards`);\n  }\n\n  // -------------------------------------\n  // API: Activity Maps\n  // -------------------------------------\n\n  getActivityMaps() {\n    return this.request.get('/activitymaps');\n  }\n\n  postActivityMaps(payload) {\n    return this.request.post('/activitymaps', payload);\n  }\n\n  postActivityMapsQuery(payload) {\n    return this.request.post('/activitymaps/query', payload);\n  }\n\n  deleteActivityMap(activityMapId) {\n    return this.request.delete(`/activitymaps/${activityMapId}`);\n  }\n\n  getActivityMap(activityMapId) {\n    return this.request.get(`/activitymaps/${activityMapId}`);\n  }\n\n  patchActivityMap(activityMapId, payload) {\n    return this.request.patch(`/activitymaps/${activityMapId}`, payload);\n  }\n\n  postActivityMapQuery(activityMapId, payload) {\n    return this.request.post(`/activitymaps/${activityMapId}/query`, payload);\n  }\n\n  getActivityMapSharing(activityMapId) {\n    return this.request.get(`/activitymaps/${activityMapId}/sharing`);\n  }\n\n  patchActivityMapSharing(activityMapId, payload) {\n    return this.request.patch(`/activitymaps/${activityMapId}/sharing`, payload);\n  }\n\n  putActivityMapSharing(activityMapId, payload) {\n    return this.request.put(`/activitymaps/${activityMapId}/sharing`, payload);\n  }\n\n  // -------------------------------------\n  // API: Alerts\n  // -------------------------------------\n\n  getAlerts() {\n    return this.request.get('/alerts');\n  }\n\n  postAlert(payload) {\n    return this.request.post('/alerts', payload);\n  }\n\n  deleteAlert(alertId) {\n    return this.request.delete(`/alerts/${alertId}`);\n  }\n\n  getAlert(alertId) {\n    return this.request.get(`/alerts/${alertId}`);\n  }\n\n  patchAlert(alertId, payload) {\n    return this.request.patch(`/alerts/${alertId}`, payload);\n  }\n\n  getAlertApplications(alertId) {\n    return this.request.get(`/alerts/${alertId}/applications`);\n  }\n\n  postAlertApplications(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/applications`, payload);\n  }\n\n  deleteAlertApplication(alertId, applicationId) {\n    return this.request.delete(`/alerts/${alertId}/applications/${applicationId}`);\n  }\n\n  postAlertApplication(alertId, applicationId) {\n    return this.request.post(`/alerts/${alertId}/applications/${applicationId}`);\n  }\n\n  getAlertDeviceGroups(alertId) {\n    return this.request.get(`/alerts/${alertId}/devicegroups`);\n  }\n\n  postAlertDeviceGroups(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/devicegroups`, payload);\n  }\n\n  deleteAlertDeviceGroup(alertId, deviceGroupId) {\n    return this.request.delete(`/alerts/${alertId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postAlertDeviceGroup(alertId, deviceGroupId) {\n    return this.request.post(`/alerts/${alertId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getAlertDevices(alertId) {\n    return this.request.get(`/alerts/${alertId}/devices`);\n  }\n\n  postAlertDevices(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/devices`, payload);\n  }\n\n  deleteAlertDevice(alertId, deviceId) {\n    return this.request.delete(`/alerts/${alertId}/devices/${deviceId}`);\n  }\n\n  postAlertDevice(alertId, deviceId) {\n    return this.request.post(`/alerts/${alertId}/devices/${deviceId}`);\n  }\n\n  getAlertEmailGroups(alertId) {\n    return this.request.get(`/alerts/${alertId}/emailgroups`);\n  }\n\n  postAlertEmailGroups(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/emailgroups`, payload);\n  }\n\n  deleteAlertEmailGroup(alertId, emailGroupId) {\n    return this.request.delete(`/alerts/${alertId}/emailgroups/${emailGroupId}`);\n  }\n\n  postAlertEmailGroup(alertId, emailGroupId) {\n    return this.request.post(`/alerts/${alertId}/emailgroups/${emailGroupId}`);\n  }\n\n  getAlertExclusionIntervals(alertId) {\n    return this.request.get(`/alerts/${alertId}/exclusionintervals`);\n  }\n\n  postAlertExclusionIntervals(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/exclusionintervals`, payload);\n  }\n\n  deleteAlertExclusionInterval(alertId, exclusionIntervalId) {\n    return this.request.delete(`/alerts/${alertId}/exclusionintervals/${exclusionIntervalId}`);\n  }\n\n  postAlertExclusionInterval(alertId, exclusionIntervalId) {\n    return this.request.post(`/alerts/${alertId}/exclusionintervals/${exclusionIntervalId}`);\n  }\n\n  getAlertNetworks(alertId) {\n    return this.request.get(`/alerts/${alertId}/networks`);\n  }\n\n  postAlertNetworks(alertId, payload) {\n    return this.request.post(`/alerts/${alertId}/networks`, payload);\n  }\n\n  deleteAlertNetwork(alertId, networkId) {\n    return this.request.delete(`/alerts/${alertId}/networks/${networkId}`);\n  }\n\n  postAlertNetwork(alertId, networkId) {\n    return this.request.post(`/alerts/${alertId}/networks/${networkId}`);\n  }\n\n  getAlertStats(alertId) {\n    return this.request.get(`/alerts/${alertId}/stats`);\n  }\n\n  // -------------------------------------\n  // API: Analysis Priority\n  // -------------------------------------\n\n  getAnalysisPriority(applianceId) {\n    return this.request.get(`/analysispriority/config/${applianceId}`);\n  }\n\n  putAnalysisPriority(applianceId, payload) {\n    return this.request.put(`/analysispriority/config/${applianceId}`, payload);\n  }\n\n  getAnalysisPriorityManager(applianceId) {\n    return this.request.get(`/analysispriority/${applianceId}/manager`);\n  }\n\n  patchAnalysisPriorityManager(applianceId, payload) {\n    return this.request.patch(`/analysispriority/${applianceId}/manager`, payload);\n  }\n\n  // -------------------------------------\n  // API: API\n  // -------------------------------------\n\n  getApikeys() {\n    return this.request.get('/apikeys');\n  }\n\n  getApikey(keyId) {\n    return this.request.get(`/apikeys/${keyId}`);\n  }\n\n  postApikeys(payload) {\n    return this.request.post('/apikeys', payload);\n  }\n\n  // -------------------------------------\n  // API: Appliances\n  // -------------------------------------\n\n  getAppliances() {\n    return this.request.get('/appliances');\n  }\n\n  getAppliance(applianceId) {\n    return this.request.get(`/appliances/${applianceId}`);\n  }\n\n  postAppliance(payload) {\n    return this.request.post('/appliances', payload);\n  }\n\n  getApplianceCloudServices(applianceId) {\n    return this.request.get(`/appliances/${applianceId}/cloudservices`);\n  }\n\n  getApplianceProductKey(applianceId) {\n    return this.request.get(`/appliances/${applianceId}/productkey`);\n  }\n\n  // -------------------------------------\n  // API: Applications\n  // -------------------------------------\n\n  getApplications({ active_from, active_until, limit, offset, searchType, value }) {\n    return this.request.get('/applications', { active_from, active_until, limit, offset, searchType, value });\n  }\n\n  getApplication(applicationId) {\n    return this.request.get(`/applications/${applicationId}`);\n  }\n\n  postApplication(applicationId, payload) {\n    return this.request.post(`/applications/${applicationId}`, payload);\n  }\n\n  patchApplication(applicationId, payload) {\n    return this.request.patch(`/applications/${applicationId}`, payload);\n  }\n\n  getApplicationActivity(applicationId) {\n    return this.request.get(`/applications/${applicationId}/activity`);\n  }\n\n  getApplicationAlerts(applicationId) {\n    return this.request.get(`/applications/${applicationId}/alerts`);\n  }\n\n  postApplicationAlerts(applicationId, payload) {\n    return this.request.post(`/applications/${applicationId}/alerts`, payload);\n  }\n\n  deleteApplicationAlert(applicationId, alertId) {\n    return this.request.delete(`/applications/${applicationId}/alerts/${alertId}`);\n  }\n\n  postApplicationAlert(applicationId, alertId) {\n    return this.request.post(`/applications/${applicationId}/alerts/${alertId}`);\n  }\n\n  getApplicationDashboards(applicationId) {\n    return this.request.get(`/applications/${applicationId}/dashboards`);\n  }\n\n  getApplicationFlexGrids(applicationId) {\n    return this.request.get(`/applications/${applicationId}/flexgrids`);\n  }\n\n  postApplicationFlexGrids(applicationId, payload) {\n    return this.request.post(`/applications/${applicationId}/flexgrids`, payload);\n  }\n\n  deleteApplicationFlexGrid(applicationId, flexGridId) {\n    return this.request.delete(`/applications/${applicationId}/flexgrids/${flexGridId}`);\n  }\n\n  postApplicationFlexGrid(applicationId, flexGridId) {\n    return this.request.post(`/applications/${applicationId}/flexgrids/${flexGridId}`);\n  }\n\n  getApplicationGeomaps(applicationId) {\n    return this.request.get(`/applications/${applicationId}/geomaps`);\n  }\n\n  postApplicationGeomaps(applicationId, payload) {\n    return this.request.post(`/applications/${applicationId}/geomaps`, payload);\n  }\n\n  deleteApplicationGeomap(applicationId, geomapId) {\n    return this.request.delete(`/applications/${applicationId}/geomaps/${geomapId}`);\n  }\n\n  postApplicationGeomap(applicationId, geomapId) {\n    return this.request.post(`/applications/${applicationId}/geomaps/${geomapId}`);\n  }\n\n  getApplicationPages(applicationId) {\n    return this.request.get(`/applications/${applicationId}/pages`);\n  }\n\n  postApplicationPages(applicationId, payload) {\n    return this.request.post(`/applications/${applicationId}/pages`, payload);\n  }\n\n  deleteApplicationPage(applicationId, pageId) {\n    return this.request.delete(`/applications/${applicationId}/pages/${pageId}`);\n  }\n\n  postApplicationPage(applicationId, pageId) {\n    return this.request.post(`/applications/${applicationId}/pages/${pageId}`);\n  }\n\n  // -------------------------------------\n  // API: Audit Log\n  // -------------------------------------\n\n  getAuditLog(limit, offset) {\n    return this.request.get('/auditlog', { limit, offset });\n  }\n\n  // -------------------------------------\n  // API: Bundles\n  // -------------------------------------\n\n  getBundles() {\n    return this.request.get('/bundles');\n  }\n\n  postBundle(payload) {\n    return this.request.post('/bundles', payload);\n  }\n\n  deleteBundle(bundleId) {\n    return this.request.delete(`/bundles/${bundleId}`);\n  }\n\n  getBundle(bundleId) {\n    return this.request.get(`/bundles/${bundleId}`);\n  }\n\n  postBundleApply(bundleId, payload) {\n    return this.request.post(`/bundles/${bundleId}/apply`, payload);\n  }\n\n  // -------------------------------------\n  // API: Custom Devices\n  // -------------------------------------\n\n  getCustomDevices(params) {\n    return this.request.get('/customdevices', params);\n  }\n\n  postCustomDevice(payload) {\n    return this.request.post('/customdevices', payload);\n  }\n\n  deleteCustomDevice(customDeviceId) {\n    return this.request.delete(`/customdevices/${customDeviceId}`);\n  }\n\n  getCustomDevice(customDeviceId, criteria) {\n    return this.request.get(`/customdevices/${customDeviceId}`, { include_criteria: criteria });\n  }\n\n  patchCustomDevice(customDeviceId, payload) {\n    return this.request.patch(`/customdevices/${customDeviceId}`, payload);\n  }\n\n  getCustomDeviceCriteria(customDeviceId) {\n    return this.request.get(`/customdevices/${customDeviceId}/criteria`);\n  }\n\n  postCustomDeviceCriteria(customDeviceId, payload) {\n    return this.request.post(`/customdevices/${customDeviceId}/criteria`, payload);\n  }\n\n  deleteCustomDeviceCriteria(customDeviceId, criteriaId) {\n    return this.request.delete(`/customdevices/${customDeviceId}/criteria/${criteriaId}`);\n  }\n\n  getCustomDeviceCriterion(customDeviceId, criteriaId) {\n    return this.request.get(`/customdevices/${customDeviceId}/criteria/${criteriaId}`);\n  }\n\n  // -------------------------------------\n  // API: Customizations\n  // -------------------------------------\n\n  getCustomizations() {\n    return this.request.get('/customizations');\n  }\n\n  postCustomization(payload) {\n    return this.request.post('/customizations', payload);\n  }\n\n  getCustomizationsStatus() {\n    return this.request.get('/customizations/status');\n  }\n\n  deleteCustomization(customizationId) {\n    return this.request.delete(`/customizations/${customizationId}`);\n  }\n\n  getCustomization(customizationId) {\n    return this.request.get(`/customizations/${customizationId}`);\n  }\n\n  postCustomizationApply(customizationId) {\n    return this.request.post(`/customizations/${customizationId}/apply`);\n  }\n\n  postCustomizationDownload(customizationId) {\n    return this.request.post(`/customizations/${customizationId}/download`);\n  }\n\n  // -------------------------------------\n  // API: Dashboards\n  // -------------------------------------\n\n  getDashboards() {\n    return this.request.get('/dashboards');\n  }\n\n  deleteDashboard(dashboardId) {\n    return this.request.delete(`/dashboards/${dashboardId}`);\n  }\n\n  getDashboard(dashboardId) {\n    return this.request.get(`/dashboards/${dashboardId}`);\n  }\n\n  patchDashboard(dashboardId, payload) {\n    return this.request.patch(`/dashboards/${dashboardId}`, payload);\n  }\n\n  getDashboardReports(dashboardId) {\n    return this.request.get(`/dashboards/${dashboardId}/reports`);\n  }\n\n  getDashboardSharing(dashboardId) {\n    return this.request.get(`/dashboards/${dashboardId}/sharing`);\n  }\n\n  patchDashboardSharing(dashboardId, payload) {\n    return this.request.patch(`/dashboards/${dashboardId}/sharing`, payload);\n  }\n\n  putDashboardSharing(dashboardId, payload) {\n    return this.request.put(`/dashboards/${dashboardId}/sharing`, payload);\n  }\n\n  // -------------------------------------\n  // API: Devices\n  // -------------------------------------\n\n  getDevices({ search_type, value, limit, offset, active_from, active_until }) {\n    return this.request.get('/devices', { search_type, value, limit, offset, active_from, active_until });\n  }\n\n  postDeviceSearch(payload) {\n    return this.request.post('/devices/search', payload);\n  }\n\n  getDevice(deviceId) {\n    return this.request.get(`/devices/${deviceId}`);\n  }\n\n  patchDevice(deviceId, payload) {\n    return this.request.patch(`/devices/${deviceId}`, payload);\n  }\n\n  getDeviceActivity(deviceId) {\n    return this.request.get(`/devices/${deviceId}/activity`);\n  }\n\n  getDeviceAlerts(deviceId, criteria) {\n    return this.request.get(`/devices/${deviceId}/alerts`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceAlerts(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/alerts`, payload);\n  }\n\n  deleteDeviceAlert(deviceId, alertId) {\n    return this.request.delete(`/devices/${deviceId}/alerts/${alertId}`);\n  }\n\n  postDeviceAlert(deviceId, alertId) {\n    return this.request.post(`/devices/${deviceId}/alerts/${alertId}`);\n  }\n\n  getDeviceDashboards(deviceId) {\n    return this.request.get(`/devices/${deviceId}/dashboards`);\n  }\n\n  getDeviceDeviceGroups(deviceId) {\n    return this.request.get(`/devices/${deviceId}/devicegroups`);\n  }\n\n  postDeviceDeviceGroups(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/devicegroups`, payload);\n  }\n\n  deleteDeviceDeviceGroup(deviceId, deviceGroupId) {\n    return this.request.delete(`/devices/${deviceId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postDeviceDeviceGroup(deviceId, deviceGroupId) {\n    return this.request.post(`/devices/${deviceId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getDeviceFlexGrids(deviceId) {\n    return this.request.get(`/devices/${deviceId}/flexgrids`);\n  }\n\n  postDeviceFlexGrids(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/flexgrids`, payload);\n  }\n\n  deleteDeviceFlexGrid(deviceId, flexGridId) {\n    return this.request.delete(`/devices/${deviceId}/flexgrids/${flexGridId}`);\n  }\n\n  postDeviceFlexGrid(deviceId, flexGridId) {\n    return this.request.post(`/devices/${deviceId}/flexgrids/${flexGridId}`);\n  }\n\n  getDeviceGeomaps(deviceId, criteria) {\n    return this.request.get(`/devices/${deviceId}/geomaps`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceGeomaps(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/geomaps`, payload);\n  }\n\n  deleteDeviceGeomap(deviceId, geomapId) {\n    return this.request.delete(`/devices/${deviceId}/geomaps/${geomapId}`);\n  }\n\n  postDeviceGeomap(deviceId, geomapId) {\n    return this.request.post(`/devices/${deviceId}/geomaps/${geomapId}`);\n  }\n\n  getDevicePages(deviceId, criteria) {\n    return this.request.get(`/devices/${deviceId}/pages`, { direct_assignments_only: criteria });\n  }\n\n  postDevicePages(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/pages`, payload);\n  }\n\n  deleteDevicePage(deviceId, pageId) {\n    return this.request.delete(`/devices/${deviceId}/pages/${pageId}`);\n  }\n\n  postDevicePage(deviceId, pageId) {\n    return this.request.post(`/devices/${deviceId}/pages/${pageId}`);\n  }\n\n  getDeviceTags(deviceId) {\n    return this.request.get(`/devices/${deviceId}/tags`);\n  }\n\n  postDeviceTags(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/tags`, payload);\n  }\n\n  deleteDeviceTag(deviceId, tagId) {\n    return this.request.delete(`/devices/${deviceId}/tags/${tagId}`);\n  }\n\n  postDeviceTag(deviceId, tagId) {\n    return this.request.post(`/devices/${deviceId}/tags/${tagId}`);\n  }\n\n  getDeviceTriggers(deviceId, criteria) {\n    return this.request.get(`/devices/${deviceId}/triggers`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceTriggers(deviceId, payload) {\n    return this.request.post(`/devices/${deviceId}/triggers`, payload);\n  }\n\n  deleteDeviceTrigger(deviceId, triggerId) {\n    return this.request.delete(`/devices/${deviceId}/triggers/${triggerId}`);\n  }\n\n  postDeviceTrigger(deviceId, triggerId) {\n    return this.request.post(`/devices/${deviceId}/triggers/${triggerId}`);\n  }\n\n  // -------------------------------------\n  // API: Device Groups\n  // -------------------------------------\n\n  getDeviceGroups(since, all, name) {\n    return this.request.get('/devicegroups', { since, all, name });\n  }\n\n  postDeviceGroup(payload) {\n    return this.request.post('/devicegroups', payload);\n  }\n\n  deleteDeviceGroup(deviceGroupId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}`);\n  }\n\n  getDeviceGroup(deviceGroupId) {\n    return this.request.get(`/devicegroups/${deviceGroupId}`);\n  }\n\n  patchDeviceGroup(deviceGroupId, payload) {\n    return this.request.patch(`/devicegroups/${deviceGroupId}`, payload);\n  }\n\n  getDeviceGroupAlerts(deviceGroupId, criteria) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/alerts`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceGroupAlerts(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/alerts`, payload);\n  }\n\n  deleteDeviceGroupAlert(deviceGroupId, alertId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/alerts/${alertId}`);\n  }\n\n  postDeviceGroupAlert(deviceGroupId, alertId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/alerts/${alertId}`);\n  }\n\n  getDeviceGroupDashboards(deviceGroupId) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/dashboards`);\n  }\n\n  getDeviceGroupDevices(deviceGroupId, { active_from, active_until, limit, offset }) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/devices`, { active_from, active_until, limit, offset });\n  }\n\n  postDeviceGroupDevices(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/devices`, payload);\n  }\n\n  deleteDeviceGroupDevice(deviceGroupId, deviceId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/devices/${deviceId}`);\n  }\n\n  postDeviceGroupDevice(deviceGroupId, deviceId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/devices/${deviceId}`);\n  }\n\n  getDeviceGroupFlexGrids(deviceGroupId) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/flexgrids`);\n  }\n\n  postDeviceGroupFlexGrids(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/flexgrids`, payload);\n  }\n\n  deleteDeviceGroupFlexGrid(deviceGroupId, flexGridId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/flexgrids/${flexGridId}`);\n  }\n\n  postDeviceGroupFlexGrid(deviceGroupId, flexGridId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/flexgrids/${flexGridId}`);\n  }\n\n  getDeviceGroupGeomaps(deviceGroupId, criteria) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/geomaps`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceGroupGeomaps(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/geomaps`, payload);\n  }\n\n  deleteDeviceGroupGeomap(deviceGroupId, geomapId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/geomaps/${geomapId}`);\n  }\n\n  postDeviceGroupGeomap(deviceGroupId, geomapId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/geomaps/${geomapId}`);\n  }\n\n  getDeviceGroupPages(deviceGroupId, criteria) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/pages`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceGroupPages(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/pages`, payload);\n  }\n\n  deleteDeviceGroupPage(deviceGroupId, pageId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/pages/${pageId}`);\n  }\n\n  postDeviceGroupPage(deviceGroupId, pageId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/pages/${pageId}`);\n  }\n\n  getDeviceGroupTags(deviceGroupId) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/tags`);\n  }\n\n  postDeviceGroupTags(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/tags`, payload);\n  }\n\n  deleteDeviceGroupTag(deviceGroupId, tagId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/tags/${tagId}`);\n  }\n\n  postDeviceGroupTag(deviceGroupId, tagId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/tags/${tagId}`);\n  }\n\n  getDeviceGroupTriggers(deviceGroupId, criteria) {\n    return this.request.get(`/devicegroups/${deviceGroupId}/triggers`, { direct_assignments_only: criteria });\n  }\n\n  postDeviceGroupTriggers(deviceGroupId, payload) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/triggers`, payload);\n  }\n\n  deleteDeviceGroupTrigger(deviceGroupId, triggerId) {\n    return this.request.delete(`/devicegroups/${deviceGroupId}/triggers/${triggerId}`);\n  }\n\n  postDeviceGroupTrigger(deviceGroupId, triggerId) {\n    return this.request.post(`/devicegroups/${deviceGroupId}/triggers/${triggerId}`);\n  }\n\n  // -------------------------------------\n  // API: Email Groups\n  // -------------------------------------\n\n  getEmailGroups() {\n    return this.request.get('/emailgroups');\n  }\n\n  postEmailGroup(payload) {\n    return this.request.post('/emailgroups', payload);\n  }\n\n  deleteEmailGroup(emailGroupId) {\n    return this.request.delete(`/emailgroups/${emailGroupId}`);\n  }\n\n  getEmailGroup(emailGroupId) {\n    return this.request.get(`/emailgroups/${emailGroupId}`);\n  }\n\n  patchEmailGroup(emailGroupId, payload) {\n    return this.request.patch(`/emailgroups/${emailGroupId}`, payload);\n  }\n\n  // -------------------------------------\n  // API: Exclusion Intervals\n  // -------------------------------------\n\n  getExclusionIntervals() {\n    return this.request.get('/exclusionintervals');\n  }\n\n  postExclusionInterval(payload) {\n    return this.request.post('/exclusionintervals', payload);\n  }\n\n  deleteExclusionInterval(exclusionIntervalId) {\n    return this.request.delete(`/exclusionintervals/${exclusionIntervalId}`);\n  }\n\n  getExclusionInterval(exclusionIntervalId) {\n    return this.request.get(`/exclusionintervals/${exclusionIntervalId}`);\n  }\n\n  patchExclusionInterval(exclusionIntervalId, payload) {\n    return this.request.patch(`/exclusionintervals/${exclusionIntervalId}`, payload);\n  }\n\n  // -------------------------------------\n  // API: Extrahop\n  // -------------------------------------\n\n  getExtrahop() {\n    return this.request.get('/extrahop');\n  }\n\n  getExtrahopIdrac() {\n    return this.request.get('/extrahop/idrac');\n  }\n\n  getExtrahopPlatform() {\n    return this.request.get('/extrahop/platform');\n  }\n\n  getExtrahopProcesses() {\n    return this.request.get('/extrahop/processes');\n  }\n\n  postExtrahopProcessRestart(processId) {\n    return this.request.post(`/extrahop/processes/${processId}/restart`);\n  }\n\n  postExtrahopSSLCert() {\n    return this.request.post('/extrahop/sslcert');\n  }\n\n  putExtrahopSSLCert(payload) {\n    return this.request.put('/extrahop/sslcert', payload);\n  }\n\n  getExtrahopVersion() {\n    return this.request.get('/extrahop/version');\n  }\n\n  // -------------------------------------\n  // API: Flex Grids\n  // -------------------------------------\n\n  getFlexGrids() {\n    return this.request.get('/flexgrids');\n  }\n\n  getFlexGridApplications(flexGridId) {\n    return this.request.get(`/flexgrids/${flexGridId}/applications`);\n  }\n\n  postFlexGridApplications(flexGridId, payload) {\n    return this.request.post(`/flexgrids/${flexGridId}/applications`, payload);\n  }\n\n  deleteFlexGridApplication(flexGridId, applicationId) {\n    return this.request.delete(`/flexgrids/${flexGridId}/applications/${applicationId}`);\n  }\n\n  postFlexGridApplication(flexGridId, applicationId) {\n    return this.request.post(`/flexgrids/${flexGridId}/applications/${applicationId}`);\n  }\n\n  getFlexGridDeviceGroups(flexGridId) {\n    return this.request.get(`/flexgrids/${flexGridId}/devicegroups`);\n  }\n\n  postFlexGridDeviceGroups(flexGridId, payload) {\n    return this.request.post(`/flexgrids/${flexGridId}/devicegroups`, payload);\n  }\n\n  deleteFlexGridDeviceGroup(flexGridId, deviceGroupId) {\n    return this.request.delete(`/flexgrids/${flexGridId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postFlexGridDeviceGroup(flexGridId, deviceGroupId) {\n    return this.request.post(`/flexgrids/${flexGridId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getFlexGridDevices(flexGridId) {\n    return this.request.get(`/flexgrids/${flexGridId}/devices`);\n  }\n\n  postFlexGridDevices(flexGridId, payload) {\n    return this.request.post(`/flexgrids/${flexGridId}/devices`, payload);\n  }\n\n  deleteFlexGridDevice(flexGridId, deviceId) {\n    return this.request.delete(`/flexgrids/${flexGridId}/devices/${deviceId}`);\n  }\n\n  postFlexGridDevice(flexGridId, deviceId) {\n    return this.request.post(`/flexgrids/${flexGridId}/devices/${deviceId}`);\n  }\n\n  // -------------------------------------\n  // API: Geomaps\n  // -------------------------------------\n\n  getGeomaps() {\n    return this.request.get('/geomaps');\n  }\n\n  postGeomaps(payload) {\n    return this.request.post('/geomaps', payload);\n  }\n\n  deleteGeomap(geomapId) {\n    return this.request.delete(`/geomaps/${geomapId}`);\n  }\n\n  getGeomap(geomapId) {\n    return this.request.get(`/geomaps/${geomapId}`);\n  }\n\n  patchGeomap(geomapId, payload) {\n    return this.request.patch(`/geomaps/${geomapId}`, payload);\n  }\n\n  getGeomapApplications(geomapId) {\n    return this.request.get(`/geomaps/${geomapId}/applications`);\n  }\n\n  postGeomapApplications(geomapId, payload) {\n    return this.request.post(`/geomaps/${geomapId}/applications`, payload);\n  }\n\n  deleteGeomapApplication(geomapId, applicationId) {\n    return this.request.delete(`/geomaps/${geomapId}/applications/${applicationId}`);\n  }\n\n  postGeomapApplication(geomapId, applicationId) {\n    return this.request.post(`/geomaps/${geomapId}/applications/${applicationId}`);\n  }\n\n  getGeomapDeviceGroups(geomapId) {\n    return this.request.get(`/geomaps/${geomapId}/devicegroups`);\n  }\n\n  postGeomapDeviceGroups(geomapId, payload) {\n    return this.request.post(`/geomaps/${geomapId}/devicegroups`, payload);\n  }\n\n  deleteGeomapDeviceGroup(geomapId, deviceGroupId) {\n    return this.request.delete(`/geomaps/${geomapId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postGeomapDeviceGroup(geomapId, deviceGroupId) {\n    return this.request.post(`/geomaps/${geomapId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getGeomapDevices(geomapId) {\n    return this.request.get(`/geomaps/${geomapId}/devices`);\n  }\n\n  postGeomapDevices(geomapId, payload) {\n    return this.request.post(`/geomaps/${geomapId}/devices`, payload);\n  }\n\n  deleteGeomapDevice(geomapId, deviceId) {\n    return this.request.delete(`/geomaps/${geomapId}/devices/${deviceId}`);\n  }\n\n  postGeomapDevice(geomapId, deviceId) {\n    return this.request.post(`/geomaps/${geomapId}/devices/${deviceId}`);\n  }\n\n  // -------------------------------------\n  // API: License\n  // -------------------------------------\n\n  getLicense() {\n    return this.request.get('/license');\n  }\n\n  putLicense(payload) {\n    return this.request.put('/license', payload);\n  }\n\n  getLicenseProductKey() {\n    return this.request.get('/license/productkey');\n  }\n\n  putLicenseProductKey(payload) {\n    return this.request.put('/license/productkey', payload);\n  }\n\n  // -------------------------------------\n  // API: Metrics\n  // -------------------------------------\n\n  postMetrics(payload) {\n    return this.request.post('/metrics', payload);\n  }\n\n  postMetricSeach(payload) {\n    return this.postMetrics(payload);\n  }\n\n  postMetricsSeach(payload) {\n    return this.postMetrics(payload);\n  }\n\n  getMetricsNext(xid) {\n    return this.request.get(`/metrics/next/${xid}`);\n  }\n\n  getNextMetrics(xid) {\n    return this.getMetricsNext(xid);\n  }\n\n  postMetricsTotal(payload) {\n    return this.request.post('/metrics/total', payload);\n  }\n\n  postMetricsTotalByObject(payload) {\n    return this.request.post('/metrics/totalbyobject', payload);\n  }\n\n  // -------------------------------------\n  // API: Networks\n  // -------------------------------------\n\n  getNetworks() {\n    return this.request.get('/networks');\n  }\n\n  getNetwork(networkId) {\n    return this.request.get(`/networks/${networkId}`);\n  }\n\n  patchNetwork(networkId, payload) {\n    return this.request.patch(`/networks/${networkId}`, payload);\n  }\n\n  getNetworkAlerts(networkId, criteria) {\n    return this.request.get(`/networks/${networkId}/alerts`, { direct_assignments_only: criteria });\n  }\n\n  postNetworkAlerts(networkId, payload) {\n    return this.request.post(`/networks/${networkId}/alerts`, payload);\n  }\n\n  deleteNetworkAlert(networkId, alertId) {\n    return this.request.delete(`/networks/${networkId}/alerts/${alertId}`);\n  }\n\n  postNetworkAlert(networkId, alertId) {\n    return this.request.post(`/networks/${networkId}/alerts/${alertId}`);\n  }\n\n  getNetworkPages(networkId, criteria) {\n    return this.request.get(`/networks/${networkId}/pages`, { direct_assignments_only: criteria });\n  }\n\n  postNetworkPages(networkId, payload) {\n    return this.request.post(`/networks/${networkId}/pages`, payload);\n  }\n\n  deleteNetworkPage(networkId, pageId) {\n    return this.request.delete(`/networks/${networkId}/pages/${pageId}`);\n  }\n\n  postNetworkPage(networkId, pageId) {\n    return this.request.post(`/networks/${networkId}/pages/${pageId}`);\n  }\n\n  getNetworkVlans(networkId) {\n    return this.request.get(`/networks/${networkId}/vlans`);\n  }\n\n  // -------------------------------------\n  // API: Network Locality Entry\n  // -------------------------------------\n\n  getNetworkLocalities() {\n    return this.request.get('/networklocality');\n  }\n\n  postNetworkLocality(payload) {\n    return this.request.post('/networklocality', payload);\n  }\n\n  deleteNetworkLocality(networkLocalityId) {\n    return this.request.delete(`/networklocality/${networkLocalityId}`);\n  }\n\n  getNetworkLocality(networkLocalityId) {\n    return this.request.get(`/networklocality/${networkLocalityId}`);\n  }\n\n  patchNetworkLocality(networkLocalityId, payload) {\n    return this.request.patch(`/networklocality/${networkLocalityId}`, payload);\n  }\n\n  // -------------------------------------\n  // API: Nodes\n  // -------------------------------------\n\n  getNodes() {\n    return this.request.get('/nodes');\n  }\n\n  getNode(nodeId) {\n    return this.request.get(`/nodes/${nodeId}`);\n  }\n\n  patchNode(nodeId, payload) {\n    return this.request.patch(`/nodes/${nodeId}`, payload);\n  }\n\n  // -------------------------------------\n  // API: Packet Captures\n  // -------------------------------------\n\n  getPacketCaptures() {\n    return this.request.get('/packetcaptures');\n  }\n\n  deletePacketCapture(packetCaptureId) {\n    return this.request.delete(`/packetcaptures/${packetCaptureId}`);\n  }\n\n  getPacketCapture(packetCaptureId) {\n    return this.request.get(`/packetcaptures/${packetCaptureId}`);\n  }\n\n  // -------------------------------------\n  // API: Pages\n  // -------------------------------------\n\n  getPages() {\n    return this.request.get('/pages');\n  }\n\n  postPages(payload) {\n    return this.request.post('/pages', payload);\n  }\n\n  deletePage(pageId) {\n    return this.request.delete(`/pages/${pageId}`);\n  }\n\n  getPage(pageId) {\n    return this.request.get(`/pages/${pageId}`);\n  }\n\n  patchPage(pageId, payload) {\n    return this.request.patch(`/pages/${pageId}`, payload);\n  }\n\n  getPageApplications(pageId) {\n    return this.request.get(`/pages/${pageId}/applications`);\n  }\n\n  postPageApplications(pageId, payload) {\n    return this.request.post(`/pages/${pageId}/applications`, payload);\n  }\n\n  deletePageApplication(pageId, applicationId) {\n    return this.request.delete(`/pages/${pageId}/applications/${applicationId}`);\n  }\n\n  postPageApplication(pageId, applicationId) {\n    return this.request.post(`/pages/${pageId}/applications/${applicationId}`);\n  }\n\n  getPageDeviceGroups(pageId) {\n    return this.request.get(`/pages/${pageId}/devicegroups`);\n  }\n\n  postPageDeviceGroups(pageId, payload) {\n    return this.request.post(`/pages/${pageId}/devicegroups`, payload);\n  }\n\n  deletePageDeviceGroup(pageId, deviceGroupId) {\n    return this.request.delete(`/pages/${pageId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postPageDeviceGroup(pageId, deviceGroupId) {\n    return this.request.post(`/pages/${pageId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getPageDevices(pageId) {\n    return this.request.get(`/pages/${pageId}/devices`);\n  }\n\n  postPageDevices(pageId, payload) {\n    return this.request.post(`/pages/${pageId}/devices`, payload);\n  }\n\n  deletePageDevice(pageId, deviceId) {\n    return this.request.delete(`/pages/${pageId}/devices/${deviceId}`);\n  }\n\n  postPageDevice(pageId, deviceId) {\n    return this.request.post(`/pages/${pageId}/devices/${deviceId}`);\n  }\n\n  getPageNetworks(pageId) {\n    return this.request.get(`/pages/${pageId}/networks`);\n  }\n\n  postPageNetworks(pageId, payload) {\n    return this.request.post(`/pages/${pageId}/networks`, payload);\n  }\n\n  deletePageNetwork(pageId, networkId) {\n    return this.request.delete(`/pages/${pageId}/networks/${networkId}`);\n  }\n\n  postPageNetwork(pageId, networkId) {\n    return this.request.post(`/pages/${pageId}/networks/${networkId}`);\n  }\n\n  // -------------------------------------\n  // API: Record Logs\n  // -------------------------------------\n\n  postRecordsCursor(payload, contextTtl) {\n    return this.request.post(`/records/cursor?context_ttl=${contextTtl}`, payload);\n  }\n\n  getRecordsCursor(cursor, contextTtl) {\n    return this.request.get(`/records/cursor/${cursor}?context_ttl=${contextTtl}`);\n  }\n\n  postRecordsSearch(payload) {\n    return this.request.post('/records/search', payload);\n  }\n\n  postRecordSearch(payload) {\n    return this.postRecordsSearch(payload);\n  }\n\n  // -------------------------------------\n  // API: Reports\n  // -------------------------------------\n\n  getReports() {\n    return this.request.get('/reports');\n  }\n\n  postReport(payload) {\n    return this.request.post('/reports', payload);\n  }\n\n  deleteReport(reportId) {\n    return this.request.delete(`/reports/${reportId}`);\n  }\n\n  getReport(reportId) {\n    return this.request.get(`/reports/${reportId}`);\n  }\n\n  patchReport(reportId, payload) {\n    return this.request.patch(`/reports/${reportId}`, payload);\n  }\n\n  getReportContents(reportId) {\n    return this.request.get(`/reports/${reportId}/contents`);\n  }\n\n  putReportContents(reportId, payload) {\n    return this.request.put(`/reports/${reportId}/contents`, payload);\n  }\n\n  getReportEmailGroups(reportId) {\n    return this.request.get(`/reports/${reportId}/emailgroups`);\n  }\n\n  postReportEmailGroups(reportId, payload) {\n    return this.request.post(`/reports/${reportId}/emailgroups`, payload);\n  }\n\n  deleteReportEmailGroup(reportId, emailGroupId) {\n    return this.request.delete(`/reports/${reportId}/emailgroups/${emailGroupId}`);\n  }\n\n  postReportEmailGroup(reportId, emailGroupId) {\n    return this.request.post(`/reports/${reportId}/emailgroups/${emailGroupId}`);\n  }\n\n  postReportQueue(reportId) {\n    return this.request.post(`/reports/${reportId}/queue`);\n  }\n\n  // -------------------------------------\n  // API: Running Config\n  // -------------------------------------\n\n  getRunningConfig(section) {\n    return this.request.get('/runningconfig', { section });\n  }\n\n  putRunningConfig(payload) {\n    return this.request.put('/runningconfig', payload);\n  }\n\n  postRunningConfigSave() {\n    return this.request.post('/runningconfig/save');\n  }\n\n  getRunningConfigSaved() {\n    return this.request.get('/runningconfig/saved');\n  }\n\n  // -------------------------------------\n  // API: Software\n  // -------------------------------------\n\n  getSoftwares() {\n    return this.request.get('/software');\n  }\n\n  getSoftware(softwareId) {\n    return this.request.get(`/software/${softwareId}`);\n  }\n\n  // -------------------------------------\n  // API: SSL Decrypt Keys\n  // -------------------------------------\n\n  getSslDecryptKeys() {\n    return this.request.get('/ssldecryptkeys');\n  }\n\n  postSslDecryptKey(payload) {\n    return this.request.post('/ssldecryptkeys', payload);\n  }\n\n  deleteSslDecryptKey(sslDecryptKeyId) {\n    return this.request.delete(`/ssldecryptkeys/${sslDecryptKeyId}`);\n  }\n\n  getSslDecryptKey(sslDecryptKeyId) {\n    return this.request.get(`/ssldecryptkeys/${sslDecryptKeyId}`);\n  }\n\n  patchSslDecryptKey(sslDecryptKeyId, payload) {\n    return this.request.patch(`/ssldecryptkeys/${sslDecryptKeyId}`, payload);\n  }\n\n  getSslDecryptKeyProtocols(sslDecryptKeyId) {\n    return this.request.get(`/ssldecrpytkeys/${sslDecryptKeyId}/protocols`);\n  }\n\n  postSslDecryptKeyProtocols(sslDecryptKeyId, payload) {\n    return this.request.post(`/ssldecrpytkeys/${sslDecryptKeyId}/protocols`, payload);\n  }\n\n  deleteSslDecryptKeyProtocol(sslDecryptKeyId, protocolId) {\n    return this.request.delete(`/ssldecrpytkeys/${sslDecryptKeyId}/protocols/${protocolId}`);\n  }\n\n  // -------------------------------------\n  // API: Support Packs\n  // -------------------------------------\n\n  getSupportPacks() {\n    return this.request.get('/supportpacks');\n  }\n\n  postSupportPackExecute() {\n    return this.request.post('/supportpacks/execute');\n  }\n\n  getSupportPackQueue(queueId) {\n    return this.request.get(`/supportpacks/queue/${encodeURIComponent}`(queueId));\n  }\n\n  getSupportPack(filename) {\n    return this.request.get(`/supportpacks/${encodeURIComponent}`(filename));\n  }\n\n  // -------------------------------------\n  // API: Tags\n  // -------------------------------------\n\n  getTags() {\n    return this.request.get('/tags');\n  }\n\n  postTag(payload) {\n    return this.request.post('/tags', payload);\n  }\n\n  deleteTag(tagId) {\n    return this.request.delete(`/tags/${tagId}`);\n  }\n\n  getTag(tagId) {\n    return this.request.get(`/tags/${tagId}`);\n  }\n\n  patchTag(tagId, payload) {\n    return this.request.patch(`/tags/${tagId}`, payload);\n  }\n\n  getTagDevices(tagId) {\n    return this.request.get(`/tags/${tagId}/devices`);\n  }\n\n  postTagDevices(tagId, payload) {\n    return this.request.post(`/tags/${tagId}/devices`, payload);\n  }\n\n  deleteTagDevice(tagId, deviceId) {\n    return this.request.delete(`/tags/${tagId}/devices/${deviceId}`);\n  }\n\n  postTagDevice(tagId, deviceId) {\n    return this.request.post(`/tags/${tagId}/devices/${deviceId}`);\n  }\n\n  // -------------------------------------\n  // API: Triggers\n  // -------------------------------------\n\n  getTriggers() {\n    return this.request.get('/triggers');\n  }\n\n  postTrigger(payload) {\n    return this.request.post('/triggers', payload);\n  }\n\n  deleteTrigger(triggerId) {\n    return this.request.delete(`/triggers/${triggerId}`);\n  }\n\n  getTrigger(triggerId) {\n    return this.request.get(`/triggers/${triggerId}`);\n  }\n\n  patchTrigger(triggerId, payload) {\n    return this.request.patch(`/triggers/${triggerId}`, payload);\n  }\n\n  getTriggerDeviceGroups(triggerId) {\n    return this.request.get(`/triggers/${triggerId}/devicegroups`);\n  }\n\n  postTriggerDeviceGroups(triggerId, payload) {\n    return this.request.post(`/triggers/${triggerId}/devicegroups`, payload);\n  }\n\n  deleteTriggerDeviceGroup(triggerId, deviceGroupId) {\n    return this.request.delete(`/triggers/${triggerId}/devicegroups/${deviceGroupId}`);\n  }\n\n  postTriggerDeviceGroup(triggerId, deviceGroupId) {\n    return this.request.post(`/triggers/${triggerId}/devicegroups/${deviceGroupId}`);\n  }\n\n  getTriggerDevices(triggerId) {\n    return this.request.get(`/triggers/${triggerId}/devices`);\n  }\n\n  postTriggerDevices(triggerId, payload) {\n    return this.request.post(`/triggers/${triggerId}/devices`, payload);\n  }\n\n  deleteTriggerDevice(triggerId, deviceId) {\n    return this.request.delete(`/triggers/${triggerId}/devices/${deviceId}`);\n  }\n\n  postTriggerDevice(triggerId, deviceId) {\n    return this.request.post(`/triggers/${triggerId}/devices/${deviceId}`);\n  }\n\n  // -------------------------------------\n  // API: Users\n  // -------------------------------------\n\n  getUsers() {\n    return this.request.get('/users');\n  }\n\n  postUser(payload) {\n    return this.request.post('/users', payload);\n  }\n\n  deleteUser(user) {\n    return this.request.delete(`/users/${user}`);\n  }\n\n  getUser(user) {\n    return this.request.get(`/users/${user}`);\n  }\n\n  patchUser(user, payload) {\n    return this.request.patch(`/users/${user}`, payload);\n  }\n\n  getUserApiKeys(user) {\n    return this.request.get(`/users/${user}/apikeys`);\n  }\n\n  getUserApiKey(user, keyId) {\n    return this.request.get(`/users/${user}/apikeys/${keyId}`);\n  }\n\n  // -------------------------------------\n  // API: User Groups\n  // -------------------------------------\n\n  getUserGroups() {\n    return this.request.get('/usergroups');\n  }\n\n  postUserGroupsRefresh() {\n    return this.request.post('/usergroups/refresh');\n  }\n\n  getUserGroup(userGroupId) {\n    return this.request.get(`/usergroups/${userGroupId}`);\n  }\n\n  patchUserGroup(userGroupId, payload) {\n    return this.request.patch(`/usergroups/${userGroupId}`, payload);\n  }\n\n  deleteUserGroupAssociations(userGroupId) {\n    return this.request.delete(`/usergroups/${userGroupId}`);\n  }\n\n  getUserGroupMembers(userGroupId) {\n    return this.request.get(`/usergroups/${userGroupId}/members`);\n  }\n\n  postUserGroupRefresh(userGroupId) {\n    return this.request.post(`/usergroups/${userGroupId}/refresh`);\n  }\n\n  // -------------------------------------\n  // API: VLANs\n  // -------------------------------------\n\n  getVlans() {\n    return this.request.get('/vlans');\n  }\n\n  getVlan(vlanId) {\n    return this.request.get(`/vlans/${vlanId}`);\n  }\n\n  patchVlan(vlanId, payload) {\n    return this.request.patch(`/vlans/${vlanId}`, payload);\n  }\n\n  // -------------------------------------\n  // API: Whitelist\n  // -------------------------------------\n\n  deleteWhitelistDevice(deviceId) {\n    return this.request.delete(`/whitelist/device/${deviceId}`);\n  }\n\n  postWhitelistDevice(deviceId) {\n    return this.request.post(`/whitelist/device/${deviceId}`);\n  }\n\n  getWhitelistsDevices() {\n    return this.request.get('/whitelist/devices');\n  }\n\n  postWhitelistDevices(payload) {\n    return this.request.post('/whitelist/devices', payload);\n  }\n};\n"]}