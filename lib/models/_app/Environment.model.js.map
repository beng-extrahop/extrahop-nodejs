{"version":3,"sources":["../../../src/models/_app/Environment.model.js"],"names":["BaseObject","require","Appliance","ApplianceSet","Icons","Platforms","module","exports","environment","name","appliances","type","platform","hostname","find","x","host","includes","ecas","filter","length","console","warn","Warn","get","Command","Discover","Trace","Explore"],"mappings":";;;;;;;;;;;;AAAA;;AAEA,IAAMA,aAAaC,QAAQ,qCAAR,CAAnB;AACA,IAAMC,YAAYD,QAAQ,mCAAR,CAAlB;AACA,IAAME,eAAeF,QAAQ,sCAAR,CAArB;;eAC6BA,QAAQ,kCAAR,C;IAArBG,K,YAAAA,K;IAAOC,S,YAAAA,S;;AAEfC,OAAOC,OAAP;AAAA;;AACE,yBAA8B;AAAA,QAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAE5B,UAAKC,IAAL,GAAYD,YAAYC,IAAxB;AACA,UAAKC,UAAL,GAAkBF,YAAYE,UAA9B;AAH4B;AAI7B;;AALH;AAAA;AAAA,8BAOoC;AAAA,UAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,UAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,UAAZC,QAAY,QAAZA,QAAY;;AAChC,UAAIA,QAAJ,EAAc;AACZ,eAAO,IAAIX,SAAJ,CAAc,KAAKQ,UAAL,CAAgBI,IAAhB,CAAqB;AAAA,iBAAK,CAACC,EAAEF,QAAH,EAAaE,EAAEC,IAAf,EAAqBC,QAArB,CAA8BJ,QAA9B,CAAL;AAAA,SAArB,CAAd,CAAP;AACD;;AAED,UAAIF,SAAS,KAAb,EAAoB;AAClB,YAAMO,OAAO,KAAKR,UAAL,CAAgBS,MAAhB,CAAuB;AAAA,iBAAKJ,EAAEJ,IAAF,KAAWA,IAAX,IAAmBI,EAAEH,QAAF,KAAeA,QAAvC;AAAA,SAAvB,CAAb;;AAEA,YAAIM,KAAKE,MAAL,GAAc,CAAlB,EAAqB;AACnBC,kBAAQC,IAAR,CAAgBlB,MAAMmB,IAAtB,6CAAkEL,KAAK,CAAL,EAAQL,QAA1E;AACD;;AAED,eAAO,IAAIX,SAAJ,CAAcgB,KAAK,CAAL,CAAd,CAAP;AACD;;AAED,gDAAWf,YAAX,mCAA2B,KAAKO,UAAL,CAAgBS,MAAhB,CAAuB;AAAA,eAAKJ,EAAEJ,IAAF,KAAWA,IAAX,IAAmBI,EAAEH,QAAF,KAAeA,QAAvC;AAAA,OAAvB,CAA3B;AACD;AAvBH;AAAA;AAAA,wBAyBMC,QAzBN,EAyBgB;AACZ,aAAO,KAAKW,GAAL,CAAS,EAAEb,MAAM,KAAR,EAAeC,UAAUP,UAAUoB,OAAnC,EAA4CZ,kBAA5C,EAAT,CAAP;AACD;AA3BH;AAAA;AAAA,wBA6BMA,QA7BN,EA6BgB;AACZ,aAAO,KAAKW,GAAL,CAAS,EAAEb,MAAM,KAAR,EAAeC,UAAUP,UAAUqB,QAAnC,EAA6Cb,kBAA7C,EAAT,CAAP;AACD;AA/BH;AAAA;AAAA,yBAiCOA,QAjCP,EAiCiB;AACb,aAAO,KAAKW,GAAL,CAAS,EAAEb,MAAM,KAAR,EAAeC,UAAUP,UAAUsB,KAAnC,EAA0Cd,kBAA1C,EAAT,CAAP;AACD;AAnCH;AAAA;AAAA,wBAqCMA,QArCN,EAqCgB;AACZ,aAAO,KAAKW,GAAL,CAAS,EAAEb,MAAM,KAAR,EAAeC,UAAUP,UAAUuB,OAAnC,EAA4Cf,kBAA5C,EAAT,CAAP;AACD;AAvCH;;AAAA;AAAA,EAA2Cb,UAA3C","file":"Environment.model.js","sourcesContent":["// Environment.model.js\n\nconst BaseObject = require('../../models/_base/BaseObject.model');\nconst Appliance = require('../../models/_app/Appliance.model');\nconst ApplianceSet = require('../../models/_app/ApplianceSet.model');\nconst { Icons, Platforms } = require('../../constants/Global.constants');\n\nmodule.exports = class Environment extends BaseObject {\n  constructor(environment = {}) {\n    super();\n    this.name = environment.name;\n    this.appliances = environment.appliances;\n  }\n\n  get({ type, platform, hostname }) {\n    if (hostname) {\n      return new Appliance(this.appliances.find(x => [x.hostname, x.host].includes(hostname)));\n    }\n\n    if (type === 'ECA') {\n      const ecas = this.appliances.filter(x => x.type === type || x.platform === platform);\n\n      if (ecas.length > 1) {\n        console.warn(`${Icons.Warn} Multiple ECAs detected. Using host: ${ecas[0].hostname}`);\n      }\n\n      return new Appliance(ecas[0]);\n    }\n\n    return new ApplianceSet(...this.appliances.filter(x => x.type === type || x.platform === platform));\n  }\n\n  eca(hostname) {\n    return this.get({ type: 'ECA', platform: Platforms.Command, hostname });\n  }\n\n  eda(hostname) {\n    return this.get({ type: 'EDA', platform: Platforms.Discover, hostname });\n  }\n\n  etas(hostname) {\n    return this.get({ type: 'ETA', platform: Platforms.Trace, hostname });\n  }\n\n  exa(hostname) {\n    return this.get({ type: 'EXA', platform: Platforms.Explore, hostname });\n  }\n};\n"]}