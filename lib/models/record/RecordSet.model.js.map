{"version":3,"sources":["../../../src/models/record/RecordSet.model.js"],"names":["BaseObjectSet","require","Record","fastCSV","fs","Config","module","exports","records","map","record","filename","subkey","headers","stream","createWriteStream","CSV_DIR","encoding","data","obj","writeToStream","on","console","error","err","Array"],"mappings":";;;;;;;;;;;;AAAA;;AAEA,IAAMA,gBAAgBC,QAAQ,wCAAR,CAAtB;AACA,IAAMC,SAASD,QAAQ,kCAAR,CAAf;AACA,IAAME,UAAUF,QAAQ,UAAR,CAAhB;AACA,IAAMG,KAAKH,QAAQ,IAAR,CAAX;;eACmBA,QAAQ,kCAAR,C;IAAXI,M,YAAAA,M;;AAERC,OAAOC,OAAP;AAAA;;AACE,uBAAwB;AAAA;;AAAA;;AAAA,sCAATC,OAAS;AAATA,aAAS;AAAA;;AAAA,+JACbA,QAAQC,GAAR,CAAY;AAAA,aAAU,IAAIP,MAAJ,CAAWQ,MAAX,CAAV;AAAA,KAAZ,CADa;AAEvB;;AAED;AACA;AACA;;AAPF;AAAA;AAAA,sCAS4C;AAAA,UAA7BC,QAA6B,SAA7BA,QAA6B;AAAA,UAAnBC,MAAmB,SAAnBA,MAAmB;AAAA,UAAXC,OAAW,SAAXA,OAAW;;AACxC,UAAMC,SAASV,GAAGW,iBAAH,CAAwBV,OAAOW,OAA/B,SAA0CL,QAA1C,EAAsD,EAAEM,UAAU,MAAZ,EAAtD,CAAf;AACA,UAAMC,OAAON,SAAS,KAAKH,GAAL,CAAS;AAAA,eAAOU,IAAIP,MAAJ,CAAP;AAAA,OAAT,CAAT,GAAwC,IAArD;;AAEAT,cAAQiB,aAAR,CAAsBN,MAAtB,EAA8BI,IAA9B,EAAoC,EAAEL,gBAAF,EAApC,EAAiDQ,EAAjD,CAAoD,OAApD,EAA6D;AAAA,eAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,OAA7D;AACD;AAdH;;AAAA;AAAA,EAAyCC,KAAzC","file":"RecordSet.model.js","sourcesContent":["// RecordSet.model.js\n\nconst BaseObjectSet = require('../../models/_base/BaseObjectSet.model');\nconst Record = require('../../models/record/Record.model');\nconst fastCSV = require('fast-csv');\nconst fs = require('fs');\nconst { Config } = require('../../constants/Global.constants');\n\nmodule.exports = class RecordSet extends Array {\n  constructor(...records) {\n    super(...records.map(record => new Record(record)));\n  }\n\n  // writeToCSV({ filename = `records-${this.generateId()}.csv`, subkey = '_source' }) {\n  //   super.writeToCSV({ filename, subkey, headers: true });\n  // }\n\n  writeToCSV({ filename, subkey, headers }) {\n    const stream = fs.createWriteStream(`${Config.CSV_DIR}/${filename}`, { encoding: 'utf8' });\n    const data = subkey ? this.map(obj => obj[subkey]) : this;\n\n    fastCSV.writeToStream(stream, data, { headers }).on('error', err => console.error(err));\n  }\n\n};\n"]}